What is the total amount each customer spent at the restaurant?
select s.customer_id, sum(m.price) from sales s join menu m on m.product_id = s.product_id group by s.customer_id;

How many days has each customer visited the restaurant?
select customer_id, count(distinct order_date) from sales group by customer_id;

What was the first item from the menu purchased by each customer?
select s.customer_id, m.product_name from sales s join menu m on s.product_id = m.produc
t_id where (customer_id, order_date) in (select customer_id, min(order_date) from sales group by customer_id);


What is the most purchased item on the menu and how many times was it purchased by all customers?
select m.product_name, count(s.product_id) as total_count from menu m join sales s on m.product_id = s.product_id group by m.product_name order by total_count desc limit 1;

Which item was the most popular for each customer?
WITH RankedItems AS (
  SELECT
    s.customer_id,
    m.product_name,
    COUNT(s.product_id) AS Times_Ordered,
    RANK() OVER (
      PARTITION BY s.customer_id
      ORDER BY COUNT(s.product_id) DESC
    ) AS `rank`
  FROM
    sales s
  JOIN
    menu m
  ON
    s.product_id = m.product_id
  GROUP BY
    s.customer_id, m.product_name
)
SELECT
  customer_id,
  product_name AS most_popular_item,
  Times_Ordered
FROM
  RankedItems
WHERE
  `rank` = 1;

Which item was purchased first by the customer after they became a member?
WITH RankedOrders AS (
  SELECT
    s.customer_id,
    m.product_name,
    s.order_date,
    ROW_NUMBER() OVER (
      PARTITION BY s.customer_id
      ORDER BY s.order_date ASC
    ) AS `rank`
  FROM
    sales s
  JOIN
    members mem
  ON
    s.customer_id = mem.customer_id
  JOIN
    menu m
  ON
    s.product_id = m.product_id
  WHERE
    s.order_date >= mem.join_date
)
SELECT
  customer_id,
  product_name AS first_item,
  order_date AS first_order_date
FROM
  RankedOrders
WHERE
  `rank` = 1;


Which item was purchased just before the customer became a member?
WITH RankedOrders AS (
  SELECT
    s.customer_id,
    m.product_name,
    s.order_date,
    RANK() OVER (
      PARTITION BY s.customer_id
      ORDER BY s.order_date DESC
    ) AS `rank`
  FROM
    sales s
  JOIN
    members mem
  ON
    s.customer_id = mem.customer_id
  JOIN
    menu m
  ON
    s.product_id = m.product_id
  WHERE
    s.order_date < mem.join_date
)
SELECT
  customer_id,
  product_name AS last_item_before_membership,
  order_date AS last_order_date
FROM
  RankedOrders
WHERE
  `rank` = 1;

What is the total items and amount spent for each member before they became a member?
SELECT
  s.customer_id,
  COUNT(s.product_id) AS total_items,
  SUM(m.price) AS total_amount_spent
FROM
  sales s
JOIN
  members mem
ON
  s.customer_id = mem.customer_id
JOIN
  menu m
ON
  s.product_id = m.product_id
WHERE
  s.order_date < mem.join_date
GROUP BY
  s.customer_id;


If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?
SELECT
  s.customer_id,
  SUM(
    CASE
      WHEN m.product_name = 'sushi' THEN m.price * 10 * 2
      ELSE m.price * 10
    END
  ) AS total_points
FROM
  sales s
JOIN
  menu m
ON
  s.product_id = m.product_id
GROUP BY
  s.customer_id;

In the first week after a customer joins the program (including their join date) they earn 2x points on all items, not just sushi - how many points do customer A and B have at the end of January?
SELECT
  s.customer_id,
  SUM(
    CASE
      WHEN s.order_date BETWEEN mem.join_date AND DATE_ADD(mem.join_date, INTERVAL 6 DAY)
      THEN m.price * 10 * 2 
      WHEN m.product_name = 'sushi'
      THEN m.price * 10 * 2 
      ELSE m.price * 10 
    END
  ) AS total_points
FROM
  sales s
JOIN
  members mem
ON
  s.customer_id = mem.customer_id
JOIN
  menu m
ON
  s.product_id = m.product_id
WHERE
  s.order_date <= '2021-01-31' 
GROUP BY
  s.customer_id;
